
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
grave_pipe: grave_pipe {
    compatible = "zmk,behavior-mod-morph";
    label = "grave_pipe";
    #binding-cells = <0>;
    bindings = <&kp GRAVE>, <&kp PIPE>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
pipe_pipe: pipe_pipe {
    compatible = "zmk,behavior-mod-morph";
    label = "pipe_pipe";
    #binding-cells = <0>;
    bindings = <&kp PIPE>, <&kp PIPE>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
plus_kp_n1: plus_kp_n1 {
    compatible = "zmk,behavior-mod-morph";
    label = "plus_kp_n1";
    #binding-cells = <0>;
    bindings = <&kp PLUS>, <&kp KP_N1>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
left_bracket_kp_n2: left_bracket_kp_n2 {
    compatible = "zmk,behavior-mod-morph";
    label = "left_bracket_kp_n2";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACKET>, <&kp KP_N2>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
left_brace_kp_n3: left_brace_kp_n3 {
    compatible = "zmk,behavior-mod-morph";
    label = "left_brace_kp_n3";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACE>, <&kp KP_N3>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
left_parenthesis_kp_n4: left_parenthesis_kp_n4 {
    compatible = "zmk,behavior-mod-morph";
    label = "left_parenthesis_kp_n4";
    #binding-cells = <0>;
    bindings = <&kp LEFT_PARENTHESIS>, <&kp KP_N4>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
amps_kp_n5: amps_kp_n5 {
    compatible = "zmk,behavior-mod-morph";
    label = "amps_kp_n5";
    #binding-cells = <0>;
    bindings = <&kp AMPS>, <&kp KP_N5>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
equal_kp_n6: equal_kp_n6 {
    compatible = "zmk,behavior-mod-morph";
    label = "equal_kp_n6";
    #binding-cells = <0>;
    bindings = <&kp EQUAL>, <&kp KP_N6>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
right_parenthesis_kp_n7: right_parenthesis_kp_n7 {
    compatible = "zmk,behavior-mod-morph";
    label = "right_parenthesis_kp_n7";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_PARENTHESIS>, <&kp KP_N7>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
right_brace_kp_n8: right_brace_kp_n8 {
    compatible = "zmk,behavior-mod-morph";
    label = "right_brace_kp_n8";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACE>, <&kp KP_N8>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
right_bracket_kp_n9: right_bracket_kp_n9 {
    compatible = "zmk,behavior-mod-morph";
    label = "right_bracket_kp_n9";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACKET>, <&kp KP_N9>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
star_kp_n0: star_kp_n0 {
    compatible = "zmk,behavior-mod-morph";
    label = "star_kp_n0";
    #binding-cells = <0>;
    bindings = <&kp STAR>, <&kp KP_N0>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
excl_prcnt: excl_prcnt {
    compatible = "zmk,behavior-mod-morph";
    label = "excl_prcnt";
    #binding-cells = <0>;
    bindings = <&kp EXCL>, <&kp PRCNT>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};

dllr_grave: dllr_grave {
    compatible = "zmk,behavior-mod-morph";
    label = "dllr_grave";
    #binding-cells = <0>;
    bindings = <&kp DLLR>, <&kp GRAVE>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
grave_grave: grave_grave {
    compatible = "zmk,behavior-mod-morph";
    label = "grave_grave";
    #binding-cells = <0>;
    bindings = <&kp GRAVE>, <&kp GRAVE>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
bslh_hash: bslh_hash {
    compatible = "zmk,behavior-mod-morph";
    label = "bslh_hash";
    #binding-cells = <0>;
    bindings = <&kp BSLH>, <&kp HASH>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
at_caret: at_caret {
    compatible = "zmk,behavior-mod-morph";
    label = "at_caret";
    #binding-cells = <0>;
    bindings = <&kp AT>, <&kp CARET>;
    mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
};
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL  plus_kp_n1  left_bracket_kp_n2  left_brace_kp_n3  left_parenthesis_kp_n4  amps_kp_n5              &tog 1                                                                 &mo 3  equal_kp_n6  right_parenthesis_kp_n7  right_parenthesis_kp_n7  right_brace_kp_n8  right_bracket_kp_n9  &kp MINUS
   &kp TAB       &kp Q               &kp W             &kp E                   &kp R       &kp T               &none                                                                 &none        &kp Y                    &kp U                    &kp I              &kp O                &kp P   &kp BSLH
   &kp ESC       &kp A               &kp S             &kp D                   &kp F       &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none        &kp H                    &kp J                    &kp K              &kp L             &kp SEMI    &kp SQT
 &kp LSHFT       &kp Z               &kp X             &kp C                   &kp V       &kp B                                 &kp HOME                  &kp PG_UP                              &kp N                    &kp M                &kp COMMA            &kp DOT             &kp FSLH  &kp RSHFT
     &mo 2   &kp GRAVE            &kp CAPS          &kp LEFT               &kp RIGHT                        &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE                                &kp UP                 &kp DOWN           &kp LBKT             &kp RBKT      &mo 2
            >;
        };

        layer_you_suck {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

    };
};
